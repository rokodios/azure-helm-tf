name: 'Terraform Checks'

on: 
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  terraform:
    name: 'Terraform Format & Validate'
    runs-on: ubuntu-latest

    steps:
      # Paso 1: Checkout del código
      - name: Checkout repository
        uses: actions/checkout@v4

      # Paso 2: Configurar Terraform sin backend remoto
      - name: Initialize Terraform without backend
        run: terraform init -backend=false

      # Paso 3: Comprobación de Formato con terraform fmt y exportar errores
      - name: Terraform Format Check with Diff
        run: terraform fmt -check -diff > format_errors.txt
        continue-on-error: true

      # Paso 4: Validación de los archivos con terraform validate
      - name: Terraform Validate
        run: terraform validate
        continue-on-error: true

      # Paso 5: Mostrar los errores de formato
      - name: Show Format Errors
        run: cat format_errors.txt

  # Job separado para aplicar terraform fmt si se aprueba y revision final de los cambios realizados 
  terraform_format:
    name: 'Apply Terraform Fmt'
    runs-on: ubuntu-latest
    needs: terraform  # Solo se ejecuta después de que el primer job termine
    environment: approval-needed  # Requiere aprobación manual
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Apply Terraform Fmt
        run: terraform fmt
    
    # Paso 8: Comprobar si hubo cambios y ejecutar git diff solo si los hay
      - name: Check for modifications and show diff
        run: |
          if git diff --exit-code > /dev/null; then
            echo "No changes detected";
          else
            git diff;
          fi